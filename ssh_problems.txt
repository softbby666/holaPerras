☁  ~  ssh git@140.82.113.3
The authenticity of host '140.82.113.3 (140.82.113.3)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This host key is known by the following other names/addresses:
~/.ssh/known_hosts:3: github.com
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '140.82.113.3' (ED25519) to the list of known hosts.
PTY allocation request failed on channel 0
Hi softbby666! You've successfully authenticated, 
but GitHub does not provide shell access.
Connection to 140.82.113.3 closed.

☁  ~  ssh git@github.com 
PTY allocation request failed on channel 0
Hi softbby666! You've successfully authenticated, 
but GitHub does not provide shell access.
Connection to github.com closed.

☁  ~  ssh -vT git@github.com -> D E B U G S:
d: Authenticator provider $SSH_SK_PROVIDER did not resolve; disabling

d: identity file /Users/casadeempeno/.ssh/id_rsa.pub-cert type -1

d: load_hostkeys: fopen /Users/casadeempeno/.ssh/known_hosts2: No such file or directory
d: Found key in /Users/casadeempeno/.ssh/known_hosts:1
d: client_input_hostkeys: searching /Users/casadeempeno/.ssh/known_hosts for github.com / (none)
d: client_input_hostkeys: searching /Users/casadeempeno/.ssh/known_hosts2 for github.com / (none)
d: client_input_hostkeys: hostkeys file /Users/casadeempeno/.ssh/known_hosts2 : does not exist
___________/.ssh/known_hosts______________
☁  .ssh  cat known_hosts 
github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
140.82.113.3 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl

__________________etc/ssh/ssh_config_________ssh_known_hosts___________________
d: /etc/ssh/ssh_config line 21: include /etc/ssh/ssh_config.d/* matched no files
d: load_hostkeys: fopen /etc/ssh/ssh_known_hosts: No such file or directory
d: load_hostkeys: fopen /etc/ssh/ssh_known_hosts2: No such file or directory
☁  ~  /etc/ssh/ssh_config.d/
☁  ssh_config.d  ls -al
total 0
drwxr-xr-x  2 root  wheel   64 May  9 16:30 .
drwxr-xr-x  7 root  wheel  224 May  9 16:30 ..


_: Server host key: ssh-ed25519 SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU
_: Host 'github.com' is known and matches the ED25519 host key.
-: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0

* user's configuration file ~/.ssh/config - This is the per-user configuration file. 
The format of this file is described above. This file is used by the SSH client. 
Because of the potential for abuse, this file must have strict permissions: read/write for the user, 
and not accessible by others. 
  Host *
  AddKeysToAgent yes
  IdentityFile ~/.ssh/id_rsa.pub

* system-wide configuration file /etc/ssh/ssh_config - Systemwide configuration file. 
This file provides defaults for those values that are not specified in the user's configuration file, 
and for those users who do not have a configuration file. This file must be world-readable.
       
        Include /etc/ssh/ssh_config.d/*
        Host *
        SendEnv LANG LC_*


SOLUCIONES POSIBLES:

ssh -F ~/.ssh/config your_user@your_host -  is taking the user configuration, 
                 : If you don't use -F, it also takes the global configuration, 
                  instead of ignoring it completely.
                 : The reason that this works is the -F option. It forces ssh 
                  to not use the system-wide config. This is most often the file 
                  that contains a setting like "Host *\n. SendEnv LANG LC_*"
                 : If a configuration file is given on the command line, 
                  the system-wide configuration file (/etc/ssh/ssh_config) will be ignore

ssh -i ~/.ssh/id_rsa_fortrabbit {{app-name}}@deploy.{{region}}.frbit.com
-> To use a specific key run SSH and specify a different key than the default.
                 :If you use an unprotected key (no passphrase) and still get asked about a password, 
                 it may be the case that the key in the default location is not imported 
                 into fortrabbit.
                 :Adjust the path of the key (~/.ssh/id_rsa_fortrabbit). 
                 It needs to point to private key that you actually have on your machine.

ssh-keygen -A --> NO FUNCIONA
-A: For each of the key types (rsa1, rsa, dsa, ecdsa and ed25519) 
for which host keys do not exist, generate the host keys with the default key 
file path, an empty passphrase, default bits for the key type, and default comment. 
This is used by /etc/rc to generate new host keys.

Follow these steps to regenerate OpenSSH Host Keys:
                 Delete old ssh host keys: rm /etc/ssh/ssh_host_*
                 Reconfigure OpenSSH Server: dpkg-reconfigure openssh-server
                 Update all ssh client(s) ~/.ssh/known_hosts files

Set the remote url on my local machine by copying the ssh url type of my repository:  
           ☁  ~  git remote set-url origin git@github.com:username/your-repository.git
                 replace git@github.com:username/your-repository.git with your ssh url from git hub.


☁  ~ eval "$(ssh-agent -s)"                                   
Agent pid 41799
☁  ~  ssh-add 